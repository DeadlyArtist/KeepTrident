plugins {
    id 'dev.architectury.loom' version '1.11-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.gradleup.shadow' version '8.3.6' apply false
    id 'io.github.pacifistmc.forgix' version '2.+'
}

rootProject.archives_name = "$rootProject.archives_name-mc$rootProject.minecraft_version"

forgix {
    autoRun = true
    archiveBaseName = rootProject.archives_name
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'

    base {
        // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
        archivesName = "$rootProject.archives_name-$project.name"
    }

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
        mappings "net.fabricmc:yarn:$rootProject.yarn_mappings:v2"
    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = project.java_version as Integer
    }


    processResources {
        def compatible_forgemc_versions = "${project.compatible_minecraft_versions}".replaceAll("\"", "").replaceAll("]", ",)")
        var expandProps = ['version'                      : project.version,
                           'group'                        : project.group,
                           'minecraft_version'            : project.minecraft_version,
                           'compatible_minecraft_versions': project.compatible_minecraft_versions,
                           'compatible_forgemc_versions'  : compatible_forgemc_versions,
                           'mod_name'                     : project.mod_name,
                           'mod_authors'                  : project.mod_authors,
                           'mod_id'                       : project.mod_id,
                           'license'                      : project.license,
                           'homepage'                     : project.homepage,
                           'source'                       : project.source,
                           'issues'                       : project.issues,
                           'description'                  : project.description,
                           'credits'                      : project.credits,
                           'java_version'                 : project.java_version]

        filesMatching(['pack.mcmeta', 'fabric.mod.json', 'META-INF/mods.toml', 'META-INF/neoforge.mods.toml', '*.mixins.json']) {
            expand expandProps
        }
        inputs.properties(expandProps)
    }

    // Configure Maven publishing.
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = base.archivesName.get()
                from components.java
            }
        }

        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
        repositories {
            // Add repositories to publish to here.
            // Notice: This block does NOT have the same function as the block in the top level.
            // The repositories here will be used for publishing your artifact, not for
            // retrieving dependencies.
        }
    }
}
